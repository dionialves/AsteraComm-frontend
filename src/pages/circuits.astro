---
import Layout from "../layouts/Layout.astro";
---

<Layout>
    <h1 class="text-2xl font-semibold mb-4">Lista de Circuitos</h1>

    <div class="overflow-x-auto p-4 bg-white rounded-lg shadow">
        <p id="loading" class="text-gray-600 mb-2">Carregando...</p>

        <table id="table-circuits" class="min-w-full border border-gray-200 rounded-lg shadow-sm text-sm" style="display:none;">
            <thead class="bg-gray-100 text-gray-700">
                <tr>
                    <th data-field="id" class="px-4 py-2 text-left font-semibold">Circuito</th>
                    <th data-field="username" class="px-4 py-2 text-left font-semibold">Username</th>
                    <th data-field="password" class="px-4 py-2 text-left font-semibold">Password</th>
                    <th data-field="ip" class="px-4 py-2 text-left font-semibold">IP</th>
                    <th data-field="online" class="px-4 py-2 text-left font-semibold">Status</th>
                </tr>
            </thead>
            <tbody id="tbody-circuits" class="divide-y divide-gray-200"></tbody>
        </table>

        <div class="pagination-controls flex items-center justify-between mt-4" style="display:none;">
            <button id="btn-prev" class="px-4 py-2 bg-gray-200 rounded hover:bg-gray-300 text-sm">Anterior</button>
            <span id="page-info" class="text-sm text-gray-700"></span>
            <button id="btn-next" class="px-4 py-2 bg-gray-200 rounded hover:bg-gray-300 text-sm">Próxima</button>
        </div>
    </div>

<script type="module" defer>
    const tbody = document.getElementById("tbody-circuits");
    const loading = document.getElementById("loading");
    const table = document.getElementById("table-circuits");
    const btnPrev = document.getElementById("btn-prev");
    const btnNext = document.getElementById("btn-next");
    const pageInfo = document.getElementById("page-info");
    const paginationControls = document.querySelector(".pagination-controls");

    let currentPage = 0;
    let totalPages = 0;
    let currentSortField = "id";       // campo inicial para ordenar
    let currentSortDirection = "asc";  // direção inicial (ascendente)

    const headers = document.querySelectorAll("thead th[data-field]");
    headers.forEach(th => {
        th.addEventListener("click", () => {
            const field = th.getAttribute("data-field");

            if (currentSortField === field) {
                // alterna direção se clicar na mesma coluna
                currentSortDirection = currentSortDirection === "asc" ? "desc" : "asc";
            } else {
                currentSortField = field;
                currentSortDirection = "asc"; // padrão quando muda coluna
            }

            // Sempre que ordenar, volta para a primeira página
            carregarDados(0);
        });
    });

    function carregarDados(pagina) {
        loading.style.display = "block";
        table.style.display = "none";
        paginationControls.style.display = "none";


        // Monta a URL incluindo sort
        const url = `/api/circuits?page=${pagina}&size=20&sort=${currentSortField},${currentSortDirection}`;

        fetch(url)
            .then(res => {
                if (!res.ok) throw new Error("Erro na resposta da API");
                return res.json();
            })
            .then(data => {
                loading.style.display = "none";
                table.style.display = "table";
                paginationControls.style.display = "flex";

                currentPage = pagina;
                totalPages = data.totalPages;

                tbody.innerHTML = "";

                if (data.content.length === 0) {
                    tbody.innerHTML = `<tr><td colspan="5" class="text-center py-4 text-gray-500">Nenhum circuito encontrado.</td></tr>`;
                } else {
                    data.content.forEach(item => {
                        const tr = document.createElement("tr");
                        tr.className = "odd:bg-gray-50 hover:bg-gray-100 transition-colors";

                        tr.innerHTML = `
                            <td class="px-4 py-2">${item.id}</td>
                            <td class="px-4 py-2">${item.username}</td>
                            <td class="px-4 py-2">${item.password}</td>
                            <td class="px-4 py-2 text-gray-500 italic">${item.ip || '—'}</td>
                            <td class="px-4 py-2 font-semibold ${item.online ? 'text-green-600' : 'text-red-600'}">
                                ${item.online ? `Online - ${item.rtt}` : 'Offline'}
                            </td>
                        `;

                        tbody.appendChild(tr);
                    });
                }

                pageInfo.textContent = `Página ${currentPage + 1} de ${totalPages}`;
            })
            .catch(err => {
                loading.textContent = "Erro ao carregar dados.";
                console.error(err);
            });
    }

    btnPrev.addEventListener("click", () => {
        if (currentPage > 0) carregarDados(currentPage - 1);
    });

    btnNext.addEventListener("click", () => {
        if (currentPage < totalPages - 1) carregarDados(currentPage + 1);
    });

    // Carrega a primeira página ao iniciar
    carregarDados(0);




    </script>
</Layout>

